# Archivo compose para produccion (no montamos volÃºmenes)
services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - 8432:5432

  web:
    build: ./app
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             uv run gunicorn --chdir /app global_exchange_django.wsgi:application -w 4 -b 0.0.0.0:8000 --log-level=info"
    working_dir: /app
    environment:
      - DJANGO_SETTINGS_MODULE=global_exchange_django.settings
      - RUN_MIGRATIONS=1
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - 8000
    depends_on:
      - db

  nginx:
    image: nginx:1.25-alpine
    ports:
      - 8080:80
      - 4443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/static:ro
    depends_on:
      - web

  simulador-api:
    build:
      context: ./api_externo_simulador
    ports:
      - 5001:5001
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PUERTO=5001
      - PROBABILIDAD_EXITO=0.7
      - TIEMPO_PROCESAMIENTO_MIN=2
      - TIEMPO_PROCESAMIENTO_MAX=5
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data_prod:
  static_volume:

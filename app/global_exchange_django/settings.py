"""
Django settings for global_exchange_django project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Importing and reading env variables
from environ import Env

env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")  # Use env variable

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)  # Using env variable

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")  # Using env variable

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.presentacion",
    ######EMPIEZA COMENTARIO DE LA PARTE DE AUTENTICACIÓN Y SEGURIDAD#########################################################inicio borrado1
    # Add 'allauth' and its dependencies for authentication
    #en particular: 'django-allauth', 'allauth', 'allauth.account', 'allauth.socialaccount'(se puede quitar), 'accounts' (después hay que agregar lo de autentication backends que está más abajo),
###########################################fin borrado1
]

##########################################################inicio borrado2
'''
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",  # Default backend
    "allauth.account.auth_backends.AuthenticationBackend",  # Allauth backend]
'''
    # This allows you to use Django's default authentication alongside Allauth.
'''
SITE_ID = 1  # Default site ID for Allauth, can be changed later if needed
ACCOUNT_EMAIL_REQUIRED = True  # Require email for account creation
ACCOUNT_USERNAME_REQUIRED = False  # PARA USAR EMAIL COMO USUARIO
ACCOUNT_AUTHENTICATION_METHOD = "email"  # Use email for authentication
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # si o si email verification
ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"  # Default adapter for Allauth
LOGIN_REDIRECT_URL = "/DASHBOARD/"  # Redirect URL after login (O AL MENU PRINCIPAL QUE HAY QUE HACER LUEGO...)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"  # Use SMTP for sending emails (ESTA OPCION ES PARA EL REAL, PRODUCCIÓN)
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"  # Use console for development (para desarrollo, para ver los emails en la consola)
#AGREGAR URLS DE DJANGO ALLAUTH EN EL urls.py
'''
#DESPUÉS DE ESTO: la IA dice: migraciones: docker-compose run web python manage.py makemigrations && migrate, no pillo...
### TERMINA COMENTARIO DE LA PARTE DE AUTENTICACIÓN Y SEGURIDAD###################################################fin borrado2

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "global_exchange_django.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "global_exchange_django.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": env.str("SQL_ENGINE", default="django.db.backends.sqlite3"),
        "NAME": env.str("SQL_DATABASE", default=BASE_DIR / "db.sqlite3"),
        "USER": env.str("SQL_USER", default="user"),
        "PASSWORD": env.str("SQL_PASSWORD", default="password"),
        "HOST": env.str("SQL_HOST", default="localhost"),
        "PORT": env.str("SQL_PORT", default="5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

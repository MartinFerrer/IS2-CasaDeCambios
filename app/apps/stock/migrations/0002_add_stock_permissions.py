# Generated by Django 5.2.5 on 2025-10-16 15:30

from django.contrib.auth.management import create_permissions
from django.db import migrations


def agregar_permisos_stock_a_admin(apps, schema_editor):
    """Agregar permisos de Stock al grupo Administrador."""
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # Garantizar que los permisos estén creados para la app stock
    for app_config in apps.get_app_configs():
        if app_config.label == 'stock':
            app_config.models_module = True
            create_permissions(app_config, verbosity=0)
            app_config.models_module = None

    # Obtener o crear el grupo Administrador
    grupo_admin, _ = Group.objects.get_or_create(name="Administrador")

    # Agregar permisos de stock al grupo Administrador
    permisos_stock = Permission.objects.filter(content_type__app_label='stock')
    for permiso in permisos_stock:
        grupo_admin.permissions.add(permiso)


def remover_permisos_stock_de_admin(apps, schema_editor):
    """Remover permisos de Stock del grupo Administrador."""
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    try:
        grupo_admin = Group.objects.get(name="Administrador")
        permisos_stock = Permission.objects.filter(content_type__app_label='stock')
        for permiso in permisos_stock:
            grupo_admin.permissions.remove(permiso)
    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):
    """Migración para agregar permisos de Stock al grupo Administrador."""

    dependencies = [
        ('stock', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RunPython(agregar_permisos_stock_a_admin, remover_permisos_stock_de_admin),
    ]

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 60s
      timeout: 10s
      retries: 5
    ports:
      - 7432:5432

  web:
    build:
      context: ./app
      cache_from:
        - ghcr.io/astral-sh/uv:python3.13-bookworm-slim
    command: uv run manage.py runserver 0.0.0.0:8000
    working_dir: /app
    volumes:
      # Montar codigo fuente pero excluir .venv
      - ./app:/app:cached
      # Volumen anonimo (no montado desde host) para .venv
      - /app/.venv
      # Montar CSS generado por Tailwind (no en modo cached)
      - ./app/static/css/output.css:/app/static/css/output.css:ro
    ports:
      - 8000:8000
    env_file:
      - ./.env
    environment:
      - RUN_MIGRATIONS=1
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        # Sincronizar cambios en codigo fuente
        - action: sync
          path: ./app
          target: /app
          ignore:
            - .venv/
            - __pycache__/
            - "*.pyc"
            - "*.pyo"
            - "*.pyd"
            - static/css/output.css
            - static/css/tailwindcss*
        # Rebuild cuando cambian dependencias
        - action: rebuild
          path: ./app/uv.lock
        - action: rebuild
          path: ./app/pyproject.toml

  test:
    build:
      context: ./app
      cache_from:
        - ghcr.io/astral-sh/uv:python3.13-bookworm-slim
      args:
        - INSTALL_DEV_DEPS=true
    command: pytest -v
    working_dir: /app
    volumes:
      - ./app:/app:cached
      - /app/.venv
    env_file:
      - ./.env
    environment:
      - RUN_MIGRATIONS=0
    depends_on:
      db:
        condition: service_healthy

  simulador-api:
    build:
      context: ./api_externo_simulador
    ports:
      - 5002:5001
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PUERTO=5001
      - PROBABILIDAD_EXITO=0.7
      - TIEMPO_PROCESAMIENTO_MIN=2
      - TIEMPO_PROCESAMIENTO_MAX=5
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    develop:
      watch:
        # Sincronizar cambios en codigo fuente del banco
        - action: sync
          path: ./api_externo_simulador
          target: /app
        # Rebuild cuando cambian dependencias
        - action: rebuild
          path: ./api_externo_simulador/requirements.txt

  django-q:
    build: ./app
    command: uv run manage.py qcluster
    working_dir: /app
    environment:
      - DJANGO_SETTINGS_MODULE=global_exchange_django.settings
    env_file:
      - ./.env
    volumes:
      - ./app:/app:cached
      - /app/.venv
    depends_on:
      - db

volumes:
  postgres_data_dev:
